/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ch.srg.sam.generated.model

import ch.srg.sam.generated.model.BroadcastInformationDto
import ch.srg.sam.generated.model.BusinessUnitDto
import ch.srg.sam.generated.model.ImageFocalPointDto
import ch.srg.sam.generated.model.LanguageDto
import ch.srg.sam.generated.model.LinkDto
import ch.srg.sam.generated.model.QualityDto
import ch.srg.sam.generated.model.TopicDto
import ch.srg.sam.generated.model.TransmissionDto

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * A show is a container for a sequence of episodes in a given format. An example is the main evening news at SRF, the Tagesschau.
 *
 * @param id 
 * @param vendor 
 * @param transmission 
 * @param urn 
 * @param title 
 * @param imageUrl 
 * @param lead 
 * @param description 
 * @param imageTitle 
 * @param imageCopyright 
 * @param imageFocalPoint 
 * @param bannerImageUrl 
 * @param posterImageUrl 
 * @param posterImageIsFallbackUrl 
 * @param podcastImageUrl 
 * @param podcastImageIsFallbackUrl 
 * @param homepageUrl 
 * @param podcastSubscriptionUrl 
 * @param podcastFeedSdUrl 
 * @param podcastFeedHdUrl 
 * @param podcastDeezerUrl 
 * @param podcastSpotifyUrl 
 * @param timeTableUrl Link to program guide
 * @param links 
 * @param primaryChannelId 
 * @param primaryChannelUrn 
 * @param viewedMedias viewedMedias is no longer supported and is always null
 * @param numberOfEpisodes 
 * @param availableAudioLanguageList 
 * @param availableSubtitleLanguageList 
 * @param availableVideoQualityList 
 * @param audioDescriptionAvailable 
 * @param subtitlesAvailable 
 * @param multiAudioLanguagesAvailable 
 * @param topicList 
 * @param broadcastInformation 
 * @param allowIndexing 
 */


data class ShowDto (

    @field:JsonProperty("id")
    val id: kotlin.String,

    @field:JsonProperty("vendor")
    val vendor: BusinessUnitDto,

    @field:JsonProperty("transmission")
    val transmission: TransmissionDto,

    @field:JsonProperty("urn")
    val urn: kotlin.String,

    @field:JsonProperty("title")
    val title: kotlin.String,

    @field:JsonProperty("imageUrl")
    val imageUrl: kotlin.String,

    @field:JsonProperty("lead")
    val lead: kotlin.String? = null,

    @field:JsonProperty("description")
    val description: kotlin.String? = null,

    @field:JsonProperty("imageTitle")
    val imageTitle: kotlin.String? = null,

    @field:JsonProperty("imageCopyright")
    val imageCopyright: kotlin.String? = null,

    @field:JsonProperty("imageFocalPoint")
    val imageFocalPoint: ImageFocalPointDto? = null,

    @field:JsonProperty("bannerImageUrl")
    val bannerImageUrl: kotlin.String? = null,

    @field:JsonProperty("posterImageUrl")
    val posterImageUrl: kotlin.String? = null,

    @field:JsonProperty("posterImageIsFallbackUrl")
    val posterImageIsFallbackUrl: kotlin.Boolean? = null,

    @field:JsonProperty("podcastImageUrl")
    val podcastImageUrl: kotlin.String? = null,

    @field:JsonProperty("podcastImageIsFallbackUrl")
    val podcastImageIsFallbackUrl: kotlin.Boolean? = null,

    @field:JsonProperty("homepageUrl")
    val homepageUrl: kotlin.String? = null,

    @field:JsonProperty("podcastSubscriptionUrl")
    val podcastSubscriptionUrl: kotlin.String? = null,

    @field:JsonProperty("podcastFeedSdUrl")
    val podcastFeedSdUrl: kotlin.String? = null,

    @field:JsonProperty("podcastFeedHdUrl")
    val podcastFeedHdUrl: kotlin.String? = null,

    @field:JsonProperty("podcastDeezerUrl")
    val podcastDeezerUrl: kotlin.String? = null,

    @field:JsonProperty("podcastSpotifyUrl")
    val podcastSpotifyUrl: kotlin.String? = null,

    /* Link to program guide */
    @field:JsonProperty("timeTableUrl")
    val timeTableUrl: kotlin.String? = null,

    @field:JsonProperty("links")
    val links: kotlin.collections.List<LinkDto>? = null,

    @field:JsonProperty("primaryChannelId")
    val primaryChannelId: kotlin.String? = null,

    @field:JsonProperty("primaryChannelUrn")
    val primaryChannelUrn: kotlin.String? = null,

    /* viewedMedias is no longer supported and is always null */
    @field:JsonProperty("viewedMedias")
    val viewedMedias: kotlin.Int? = null,

    @field:JsonProperty("numberOfEpisodes")
    val numberOfEpisodes: kotlin.Int? = null,

    @field:JsonProperty("availableAudioLanguageList")
    val availableAudioLanguageList: kotlin.collections.List<LanguageDto>? = null,

    @field:JsonProperty("availableSubtitleLanguageList")
    val availableSubtitleLanguageList: kotlin.collections.List<LanguageDto>? = null,

    @field:JsonProperty("availableVideoQualityList")
    val availableVideoQualityList: kotlin.collections.List<QualityDto>? = null,

    @field:JsonProperty("audioDescriptionAvailable")
    val audioDescriptionAvailable: kotlin.Boolean? = null,

    @field:JsonProperty("subtitlesAvailable")
    val subtitlesAvailable: kotlin.Boolean? = null,

    @field:JsonProperty("multiAudioLanguagesAvailable")
    val multiAudioLanguagesAvailable: kotlin.Boolean? = null,

    @field:JsonProperty("topicList")
    val topicList: kotlin.collections.List<TopicDto>? = null,

    @field:JsonProperty("broadcastInformation")
    val broadcastInformation: BroadcastInformationDto? = null,

    @field:JsonProperty("allowIndexing")
    val allowIndexing: kotlin.Boolean? = null

)

