/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ch.srg.sam.generated.model

import ch.srg.sam.generated.model.AspectRatioDto
import ch.srg.sam.generated.model.AssignedByDto
import ch.srg.sam.generated.model.AudioTrackDto
import ch.srg.sam.generated.model.BlockReasonDto
import ch.srg.sam.generated.model.BusinessUnitDto
import ch.srg.sam.generated.model.ChannelDto
import ch.srg.sam.generated.model.EpisodeDto
import ch.srg.sam.generated.model.ImageFocalPointDto
import ch.srg.sam.generated.model.MediaTypeDto
import ch.srg.sam.generated.model.PlayerPropertyDto
import ch.srg.sam.generated.model.PresentationDto
import ch.srg.sam.generated.model.RelatedContentDto
import ch.srg.sam.generated.model.ShowDto
import ch.srg.sam.generated.model.SocialCountEntryDto
import ch.srg.sam.generated.model.SubtitleInformationDto
import ch.srg.sam.generated.model.TypeDto
import ch.srg.sam.generated.model.YouthProtectionColorDto

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Media contains all metadata of an asset (audio or video), except the playable item and the analytics data. A media can represent an full length episode, a segment (video) of an episode or a chapter (audio).
 *
 * @param date 
 * @param id 
 * @param imageUrl 
 * @param mediaType 
 * @param playableAbroad 
 * @param title 
 * @param type 
 * @param urn 
 * @param vendor 
 * @param subtitlesAvailable 
 * @param subtitleInformationList 
 * @param episode 
 * @param show 
 * @param channel 
 * @param presentation 
 * @param audioTrackList 
 * @param possibleBlockReasons Reasons why playback of a media may be blocked.
 * @param aspectRatio 
 * @param displayable Whether this media can be displayed.
 * @param assignedBy never set. Only defined to keep the openapi compatible.
 * @param blockReason 
 * @param description 
 * @param duration duration in milliseconds
 * @param imageCopyright 
 * @param imageFocalPoint 
 * @param imageTitle 
 * @param label 
 * @param lead 
 * @param mediaDescription 
 * @param playerProperties 
 * @param podcastHdUrl 
 * @param podcastSdUrl 
 * @param relatedContentList 
 * @param socialCountList 
 * @param validFrom 
 * @param validTo 
 * @param youthProtectionColor 
 */


data class MediaDto (

    @field:JsonProperty("date")
    val date: java.time.LocalDateTime,

    @field:JsonProperty("id")
    val id: kotlin.String,

    @field:JsonProperty("imageUrl")
    val imageUrl: kotlin.String,

    @field:JsonProperty("mediaType")
    val mediaType: MediaTypeDto,

    @field:JsonProperty("playableAbroad")
    val playableAbroad: kotlin.Boolean,

    @field:JsonProperty("title")
    val title: kotlin.String,

    @field:JsonProperty("type")
    val type: TypeDto,

    @field:JsonProperty("urn")
    val urn: kotlin.String,

    @field:JsonProperty("vendor")
    val vendor: BusinessUnitDto,

    @field:JsonProperty("subtitlesAvailable")
    val subtitlesAvailable: kotlin.Boolean? = null,

    @field:JsonProperty("subtitleInformationList")
    val subtitleInformationList: kotlin.collections.List<SubtitleInformationDto>? = null,

    @field:JsonProperty("episode")
    val episode: EpisodeDto? = null,

    @field:JsonProperty("show")
    val show: ShowDto? = null,

    @field:JsonProperty("channel")
    val channel: ChannelDto? = null,

    @field:JsonProperty("presentation")
    val presentation: PresentationDto? = null,

    @field:JsonProperty("audioTrackList")
    val audioTrackList: kotlin.collections.List<AudioTrackDto>? = null,

    /* Reasons why playback of a media may be blocked. */
    @field:JsonProperty("possibleBlockReasons")
    val possibleBlockReasons: kotlin.collections.List<BlockReasonDto>? = null,

    @field:JsonProperty("aspectRatio")
    val aspectRatio: AspectRatioDto? = null,

    /* Whether this media can be displayed. */
    @field:JsonProperty("displayable")
    val displayable: kotlin.Boolean? = null,

    /* never set. Only defined to keep the openapi compatible. */
    @field:JsonProperty("assignedBy")
    val assignedBy: AssignedByDto? = null,

    @field:JsonProperty("blockReason")
    val blockReason: BlockReasonDto? = null,

    @field:JsonProperty("description")
    val description: kotlin.String? = null,

    /* duration in milliseconds */
    @field:JsonProperty("duration")
    val duration: kotlin.Long? = null,

    @field:JsonProperty("imageCopyright")
    val imageCopyright: kotlin.String? = null,

    @field:JsonProperty("imageFocalPoint")
    val imageFocalPoint: ImageFocalPointDto? = null,

    @field:JsonProperty("imageTitle")
    val imageTitle: kotlin.String? = null,

    @field:JsonProperty("label")
    val label: kotlin.String? = null,

    @field:JsonProperty("lead")
    val lead: kotlin.String? = null,

    @field:JsonProperty("mediaDescription")
    val mediaDescription: kotlin.String? = null,

    @field:JsonProperty("playerProperties")
    val playerProperties: kotlin.collections.List<PlayerPropertyDto>? = null,

    @field:JsonProperty("podcastHdUrl")
    val podcastHdUrl: kotlin.String? = null,

    @field:JsonProperty("podcastSdUrl")
    val podcastSdUrl: kotlin.String? = null,

    @field:JsonProperty("relatedContentList")
    val relatedContentList: kotlin.collections.List<RelatedContentDto>? = null,

    @field:JsonProperty("socialCountList")
    @Deprecated(message = "This property is deprecated.")
    val socialCountList: kotlin.collections.List<SocialCountEntryDto>? = null,

    @field:JsonProperty("validFrom")
    val validFrom: java.time.LocalDateTime? = null,

    @field:JsonProperty("validTo")
    val validTo: java.time.LocalDateTime? = null,

    @field:JsonProperty("youthProtectionColor")
    val youthProtectionColor: YouthProtectionColorDto? = null

)

