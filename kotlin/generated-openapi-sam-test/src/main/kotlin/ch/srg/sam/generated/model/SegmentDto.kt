/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ch.srg.sam.generated.model

import ch.srg.sam.generated.model.AnalyticsDataDto
import ch.srg.sam.generated.model.AnalyticsMetadataDto
import ch.srg.sam.generated.model.AssignedByDto
import ch.srg.sam.generated.model.BlockReasonDto
import ch.srg.sam.generated.model.BusinessUnitDto
import ch.srg.sam.generated.model.ImageFocalPointDto
import ch.srg.sam.generated.model.MediaTypeDto
import ch.srg.sam.generated.model.PlayerPropertyDto
import ch.srg.sam.generated.model.RelatedContentDto
import ch.srg.sam.generated.model.SocialCountEntryDto
import ch.srg.sam.generated.model.SubtitleDto
import ch.srg.sam.generated.model.TypeDto
import ch.srg.sam.generated.model.YouthProtectionColorDto

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Logical section of a chapter, defined by its markIn and markOut points
 *
 * @param date 
 * @param id 
 * @param imageUrl 
 * @param mediaType 
 * @param playableAbroad 
 * @param position Position of this media within the sequence of medias of an episode.
 * @param title 
 * @param type 
 * @param urn 
 * @param vendor 
 * @param markIn Starting point in milliseconds
 * @param markOut End point in milliseconds
 * @param analyticsData 
 * @param analyticsMetadata 
 * @param assignedBy never set. Only defined to keep the openapi compatible.
 * @param blockReason 
 * @param description 
 * @param displayable Whether this media can be displayed.
 * @param duration duration in milliseconds
 * @param eventData Media metadata required for statistics and personalization (SocialView). Clients must send this value unmodified to statistic endpoints (/integrationlayer/2.0/{bu}/mediaStatistic/_*).
 * @param fullLengthUrn The URN of the full length media, representing the \"Episode\", which is always the first chapter in the list. Only set if the chapter is a part \"clipped/segment\" and not the full length media.
 * @param imageCopyright 
 * @param imageFocalPoint 
 * @param imageTitle 
 * @param label 
 * @param lead 
 * @param mediaDescription 
 * @param noEmbed Whether this chapter cannot be included in other sites and clients should therefore not provide an embed code.
 * @param playerProperties 
 * @param podcastHdUrl 
 * @param podcastSdUrl 
 * @param relatedContentList 
 * @param socialCountList 
 * @param subtitleList Subtitle list of the resources. Subtitles without url or format are excluded, these are only available as SubtitleInformation in subtitleInformationList
 * @param tagList A tag is a self defined keyword e.g. \"sport\" or \"news\". It is unrelated to a topic.
 * @param validFrom 
 * @param validTo 
 * @param youthProtectionColor 
 */


data class SegmentDto (

    @field:JsonProperty("date")
    val date: java.time.LocalDateTime,

    @field:JsonProperty("id")
    val id: kotlin.String,

    @field:JsonProperty("imageUrl")
    val imageUrl: kotlin.String,

    @field:JsonProperty("mediaType")
    val mediaType: MediaTypeDto,

    @field:JsonProperty("playableAbroad")
    val playableAbroad: kotlin.Boolean,

    /* Position of this media within the sequence of medias of an episode. */
    @field:JsonProperty("position")
    @Deprecated(message = "This property is deprecated.")
    val position: kotlin.Int,

    @field:JsonProperty("title")
    val title: kotlin.String,

    @field:JsonProperty("type")
    val type: TypeDto,

    @field:JsonProperty("urn")
    val urn: kotlin.String,

    @field:JsonProperty("vendor")
    val vendor: BusinessUnitDto,

    /* Starting point in milliseconds */
    @field:JsonProperty("markIn")
    val markIn: kotlin.Long? = null,

    /* End point in milliseconds */
    @field:JsonProperty("markOut")
    val markOut: kotlin.Long? = null,

    @field:JsonProperty("analyticsData")
    val analyticsData: AnalyticsDataDto? = null,

    @field:JsonProperty("analyticsMetadata")
    val analyticsMetadata: AnalyticsMetadataDto? = null,

    /* never set. Only defined to keep the openapi compatible. */
    @field:JsonProperty("assignedBy")
    val assignedBy: AssignedByDto? = null,

    @field:JsonProperty("blockReason")
    val blockReason: BlockReasonDto? = null,

    @field:JsonProperty("description")
    val description: kotlin.String? = null,

    /* Whether this media can be displayed. */
    @field:JsonProperty("displayable")
    val displayable: kotlin.Boolean? = null,

    /* duration in milliseconds */
    @field:JsonProperty("duration")
    val duration: kotlin.Long? = null,

    /* Media metadata required for statistics and personalization (SocialView). Clients must send this value unmodified to statistic endpoints (/integrationlayer/2.0/{bu}/mediaStatistic/_*). */
    @field:JsonProperty("eventData")
    val eventData: kotlin.String? = null,

    /* The URN of the full length media, representing the \"Episode\", which is always the first chapter in the list. Only set if the chapter is a part \"clipped/segment\" and not the full length media. */
    @field:JsonProperty("fullLengthUrn")
    val fullLengthUrn: kotlin.String? = null,

    @field:JsonProperty("imageCopyright")
    val imageCopyright: kotlin.String? = null,

    @field:JsonProperty("imageFocalPoint")
    val imageFocalPoint: ImageFocalPointDto? = null,

    @field:JsonProperty("imageTitle")
    val imageTitle: kotlin.String? = null,

    @field:JsonProperty("label")
    val label: kotlin.String? = null,

    @field:JsonProperty("lead")
    val lead: kotlin.String? = null,

    @field:JsonProperty("mediaDescription")
    val mediaDescription: kotlin.String? = null,

    /* Whether this chapter cannot be included in other sites and clients should therefore not provide an embed code. */
    @field:JsonProperty("noEmbed")
    val noEmbed: kotlin.Boolean? = null,

    @field:JsonProperty("playerProperties")
    val playerProperties: kotlin.collections.List<PlayerPropertyDto>? = null,

    @field:JsonProperty("podcastHdUrl")
    val podcastHdUrl: kotlin.String? = null,

    @field:JsonProperty("podcastSdUrl")
    val podcastSdUrl: kotlin.String? = null,

    @field:JsonProperty("relatedContentList")
    val relatedContentList: kotlin.collections.List<RelatedContentDto>? = null,

    @field:JsonProperty("socialCountList")
    @Deprecated(message = "This property is deprecated.")
    val socialCountList: kotlin.collections.List<SocialCountEntryDto>? = null,

    /* Subtitle list of the resources. Subtitles without url or format are excluded, these are only available as SubtitleInformation in subtitleInformationList */
    @field:JsonProperty("subtitleList")
    val subtitleList: kotlin.collections.List<SubtitleDto>? = null,

    /* A tag is a self defined keyword e.g. \"sport\" or \"news\". It is unrelated to a topic. */
    @field:JsonProperty("tagList")
    val tagList: kotlin.collections.List<kotlin.String>? = null,

    @field:JsonProperty("validFrom")
    val validFrom: java.time.LocalDateTime? = null,

    @field:JsonProperty("validTo")
    val validTo: java.time.LocalDateTime? = null,

    @field:JsonProperty("youthProtectionColor")
    val youthProtectionColor: YouthProtectionColorDto? = null

)

