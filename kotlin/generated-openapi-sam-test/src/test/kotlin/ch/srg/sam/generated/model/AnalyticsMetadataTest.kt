/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ch.srg.sam.generated.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ch.srg.sam.generated.model.AnalyticsMetadataDto

class AnalyticsMetadataDtoTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AnalyticsMetadataDto
        //val modelInstance = AnalyticsMetadataDto()

        // to test the property `mediaEpisodeId`
        should("test mediaEpisodeId") {
            // uncomment below to test the property
            //modelInstance.mediaEpisodeId shouldBe ("TODO")
        }

        // to test the property `mediaTvId`
        should("test mediaTvId") {
            // uncomment below to test the property
            //modelInstance.mediaTvId shouldBe ("TODO")
        }

        // to test the property `mediaShowId`
        should("test mediaShowId") {
            // uncomment below to test the property
            //modelInstance.mediaShowId shouldBe ("TODO")
        }

        // to test the property `mediaShow`
        should("test mediaShow") {
            // uncomment below to test the property
            //modelInstance.mediaShow shouldBe ("TODO")
        }

        // to test the property `mediaEpisode`
        should("test mediaEpisode") {
            // uncomment below to test the property
            //modelInstance.mediaEpisode shouldBe ("TODO")
        }

        // to test the property `mediaIsLivestream`
        should("test mediaIsLivestream") {
            // uncomment below to test the property
            //modelInstance.mediaIsLivestream shouldBe ("TODO")
        }

        // to test the property `mediaFullLength` - 'full' if requested media is the full length media, 'partial' otherwise
        should("test mediaFullLength") {
            // uncomment below to test the property
            //modelInstance.mediaFullLength shouldBe ("TODO")
        }

        // to test the property `mediaEnterpriseUnits`
        should("test mediaEnterpriseUnits") {
            // uncomment below to test the property
            //modelInstance.mediaEnterpriseUnits shouldBe ("TODO")
        }

        // to test the property `mediaUrn`
        should("test mediaUrn") {
            // uncomment below to test the property
            //modelInstance.mediaUrn shouldBe ("TODO")
        }

        // to test the property `mediaContentGroup` - Comma separated list of topics
        should("test mediaContentGroup") {
            // uncomment below to test the property
            //modelInstance.mediaContentGroup shouldBe ("TODO")
        }

        // to test the property `mediaChannelId` - Id of the channel
        should("test mediaChannelId") {
            // uncomment below to test the property
            //modelInstance.mediaChannelId shouldBe ("TODO")
        }

        // to test the property `mediaChannelName` - Title / name of the channel
        should("test mediaChannelName") {
            // uncomment below to test the property
            //modelInstance.mediaChannelName shouldBe ("TODO")
        }

        // to test the property `mediaSincePublicationD`
        should("test mediaSincePublicationD") {
            // uncomment below to test the property
            //modelInstance.mediaSincePublicationD shouldBe ("TODO")
        }

        // to test the property `mediaSincePublicationH`
        should("test mediaSincePublicationH") {
            // uncomment below to test the property
            //modelInstance.mediaSincePublicationH shouldBe ("TODO")
        }

        // to test the property `mediaThumbnail`
        should("test mediaThumbnail") {
            // uncomment below to test the property
            //modelInstance.mediaThumbnail shouldBe ("TODO")
        }

        // to test the property `mediaPublicationDate`
        should("test mediaPublicationDate") {
            // uncomment below to test the property
            //modelInstance.mediaPublicationDate shouldBe ("TODO")
        }

        // to test the property `mediaPublicationTime`
        should("test mediaPublicationTime") {
            // uncomment below to test the property
            //modelInstance.mediaPublicationTime shouldBe ("TODO")
        }

        // to test the property `mediaPublicationDatetime`
        should("test mediaPublicationDatetime") {
            // uncomment below to test the property
            //modelInstance.mediaPublicationDatetime shouldBe ("TODO")
        }

        // to test the property `mediaSegmentLength` - Duration of segment in seconds
        should("test mediaSegmentLength") {
            // uncomment below to test the property
            //modelInstance.mediaSegmentLength shouldBe ("TODO")
        }

        // to test the property `mediaEpisodeLength` - Duration of full length media (i.e. episode) in seconds
        should("test mediaEpisodeLength") {
            // uncomment below to test the property
            //modelInstance.mediaEpisodeLength shouldBe ("TODO")
        }

        // to test the property `mediaSegmentId`
        should("test mediaSegmentId") {
            // uncomment below to test the property
            //modelInstance.mediaSegmentId shouldBe ("TODO")
        }

        // to test the property `mediaType`
        should("test mediaType") {
            // uncomment below to test the property
            //modelInstance.mediaType shouldBe ("TODO")
        }

        // to test the property `mediaDurationCategory` - Either 'short', 'long' or 'infinit.livestream'
        should("test mediaDurationCategory") {
            // uncomment below to test the property
            //modelInstance.mediaDurationCategory shouldBe ("TODO")
        }

        // to test the property `mediaSegment` - If it's a livestream 'Livestream', otherwise the media title
        should("test mediaSegment") {
            // uncomment below to test the property
            //modelInstance.mediaSegment shouldBe ("TODO")
        }

        // to test the property `mediaIsGeoblocked`
        should("test mediaIsGeoblocked") {
            // uncomment below to test the property
            //modelInstance.mediaIsGeoblocked shouldBe ("TODO")
        }

        // to test the property `mediaAssignedTags` - List of topics separated by ; (semicolon)
        should("test mediaAssignedTags") {
            // uncomment below to test the property
            //modelInstance.mediaAssignedTags shouldBe ("TODO")
        }

        // to test the property `mediaUrl` - Resource URL
        should("test mediaUrl") {
            // uncomment below to test the property
            //modelInstance.mediaUrl shouldBe ("TODO")
        }

        // to test the property `mediaStreamingQuality`
        should("test mediaStreamingQuality") {
            // uncomment below to test the property
            //modelInstance.mediaStreamingQuality shouldBe ("TODO")
        }

        // to test the property `mediaSpecialFormat`
        should("test mediaSpecialFormat") {
            // uncomment below to test the property
            //modelInstance.mediaSpecialFormat shouldBe ("TODO")
        }

        // to test the property `mediaChannelCs` - Mediapulse channel code
        should("test mediaChannelCs") {
            // uncomment below to test the property
            //modelInstance.mediaChannelCs shouldBe ("TODO")
        }

        // to test the property `mediaTvDate`
        should("test mediaTvDate") {
            // uncomment below to test the property
            //modelInstance.mediaTvDate shouldBe ("TODO")
        }

        // to test the property `mediaTvTime`
        should("test mediaTvTime") {
            // uncomment below to test the property
            //modelInstance.mediaTvTime shouldBe ("TODO")
        }

        // to test the property `mediaIsWebOnly`
        should("test mediaIsWebOnly") {
            // uncomment below to test the property
            //modelInstance.mediaIsWebOnly shouldBe ("TODO")
        }

        // to test the property `mediaJoker1`
        should("test mediaJoker1") {
            // uncomment below to test the property
            //modelInstance.mediaJoker1 shouldBe ("TODO")
        }

        // to test the property `mediaJoker2`
        should("test mediaJoker2") {
            // uncomment below to test the property
            //modelInstance.mediaJoker2 shouldBe ("TODO")
        }

        // to test the property `mediaJoker3`
        should("test mediaJoker3") {
            // uncomment below to test the property
            //modelInstance.mediaJoker3 shouldBe ("TODO")
        }

        // to test the property `mediaLanguage`
        should("test mediaLanguage") {
            // uncomment below to test the property
            //modelInstance.mediaLanguage shouldBe ("TODO")
        }

        // to test the property `mediaSubSetId`
        should("test mediaSubSetId") {
            // uncomment below to test the property
            //modelInstance.mediaSubSetId shouldBe ("TODO")
        }

        // to test the property `mediaTopicList`
        should("test mediaTopicList") {
            // uncomment below to test the property
            //modelInstance.mediaTopicList shouldBe ("TODO")
        }

    }
}
