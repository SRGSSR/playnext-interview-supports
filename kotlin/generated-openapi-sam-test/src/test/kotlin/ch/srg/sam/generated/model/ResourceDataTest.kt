/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ch.srg.sam.generated.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ch.srg.sam.generated.model.ResourceDataDto
import ch.srg.sam.generated.model.AudioCodecDto
import ch.srg.sam.generated.model.AudioTrackDataDto
import ch.srg.sam.generated.model.DrmDataDto
import ch.srg.sam.generated.model.EncodingDto
import ch.srg.sam.generated.model.MediaContainerDto
import ch.srg.sam.generated.model.PresentationDto
import ch.srg.sam.generated.model.ProtocolDto
import ch.srg.sam.generated.model.QualityDto
import ch.srg.sam.generated.model.StreamingDto
import ch.srg.sam.generated.model.SubtitleDataDto
import ch.srg.sam.generated.model.TokenTypeDto
import ch.srg.sam.generated.model.VideoCodecDto

class ResourceDataDtoTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ResourceDataDto
        //val modelInstance = ResourceDataDto()

        // to test the property `url`
        should("test url") {
            // uncomment below to test the property
            //modelInstance.url shouldBe ("TODO")
        }

        // to test the property `quality`
        should("test quality") {
            // uncomment below to test the property
            //modelInstance.quality shouldBe ("TODO")
        }

        // to test the property `protocol`
        should("test protocol") {
            // uncomment below to test the property
            //modelInstance.protocol shouldBe ("TODO")
        }

        // to test the property `encoding`
        should("test encoding") {
            // uncomment below to test the property
            //modelInstance.encoding shouldBe ("TODO")
        }

        // to test the property `presentation`
        should("test presentation") {
            // uncomment below to test the property
            //modelInstance.presentation shouldBe ("TODO")
        }

        // to test the property `streaming`
        should("test streaming") {
            // uncomment below to test the property
            //modelInstance.streaming shouldBe ("TODO")
        }

        // to test the property `mediaContainer`
        should("test mediaContainer") {
            // uncomment below to test the property
            //modelInstance.mediaContainer shouldBe ("TODO")
        }

        // to test the property `audioCodec`
        should("test audioCodec") {
            // uncomment below to test the property
            //modelInstance.audioCodec shouldBe ("TODO")
        }

        // to test the property `videoCodec`
        should("test videoCodec") {
            // uncomment below to test the property
            //modelInstance.videoCodec shouldBe ("TODO")
        }

        // to test the property `drms`
        should("test drms") {
            // uncomment below to test the property
            //modelInstance.drms shouldBe ("TODO")
        }

        // to test the property `audioTracks`
        should("test audioTracks") {
            // uncomment below to test the property
            //modelInstance.audioTracks shouldBe ("TODO")
        }

        // to test the property `subtitles`
        should("test subtitles") {
            // uncomment below to test the property
            //modelInstance.subtitles shouldBe ("TODO")
        }

        // to test the property `tokenType`
        should("test tokenType") {
            // uncomment below to test the property
            //modelInstance.tokenType shouldBe ("TODO")
        }

        // to test the property `streamOffsetInMillis` - The delay of the stream in comparison to the wall-clock.
        should("test streamOffsetInMillis") {
            // uncomment below to test the property
            //modelInstance.streamOffsetInMillis shouldBe ("TODO")
        }

    }
}
