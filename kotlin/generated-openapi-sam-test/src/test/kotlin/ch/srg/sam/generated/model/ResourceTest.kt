/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ch.srg.sam.generated.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ch.srg.sam.generated.model.ResourceDto
import ch.srg.sam.generated.model.AnalyticsDataDto
import ch.srg.sam.generated.model.AnalyticsMetadataDto
import ch.srg.sam.generated.model.AudioCodecDto
import ch.srg.sam.generated.model.AudioTrackDto
import ch.srg.sam.generated.model.DrmDto
import ch.srg.sam.generated.model.EncodingDto
import ch.srg.sam.generated.model.MediaContainerDto
import ch.srg.sam.generated.model.PresentationDto
import ch.srg.sam.generated.model.ProtocolDto
import ch.srg.sam.generated.model.QualityDto
import ch.srg.sam.generated.model.StreamingDto
import ch.srg.sam.generated.model.SubtitleInformationDto
import ch.srg.sam.generated.model.TokenTypeDto
import ch.srg.sam.generated.model.VideoCodecDto

class ResourceDtoTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ResourceDto
        //val modelInstance = ResourceDto()

        // to test the property `url`
        should("test url") {
            // uncomment below to test the property
            //modelInstance.url shouldBe ("TODO")
        }

        // to test the property `quality`
        should("test quality") {
            // uncomment below to test the property
            //modelInstance.quality shouldBe ("TODO")
        }

        // to test the property `protocol`
        should("test protocol") {
            // uncomment below to test the property
            //modelInstance.protocol shouldBe ("TODO")
        }

        // to test the property `encoding`
        should("test encoding") {
            // uncomment below to test the property
            //modelInstance.encoding shouldBe ("TODO")
        }

        // to test the property `presentation`
        should("test presentation") {
            // uncomment below to test the property
            //modelInstance.presentation shouldBe ("TODO")
        }

        // to test the property `streaming`
        should("test streaming") {
            // uncomment below to test the property
            //modelInstance.streaming shouldBe ("TODO")
        }

        // to test the property `dvr`
        should("test dvr") {
            // uncomment below to test the property
            //modelInstance.dvr shouldBe ("TODO")
        }

        // to test the property `live`
        should("test live") {
            // uncomment below to test the property
            //modelInstance.live shouldBe ("TODO")
        }

        // to test the property `mediaContainer`
        should("test mediaContainer") {
            // uncomment below to test the property
            //modelInstance.mediaContainer shouldBe ("TODO")
        }

        // to test the property `audioCodec`
        should("test audioCodec") {
            // uncomment below to test the property
            //modelInstance.audioCodec shouldBe ("TODO")
        }

        // to test the property `videoCodec`
        should("test videoCodec") {
            // uncomment below to test the property
            //modelInstance.videoCodec shouldBe ("TODO")
        }

        // to test the property `tokenType`
        should("test tokenType") {
            // uncomment below to test the property
            //modelInstance.tokenType shouldBe ("TODO")
        }

        // to test the property `drmList`
        should("test drmList") {
            // uncomment below to test the property
            //modelInstance.drmList shouldBe ("TODO")
        }

        // to test the property `mimeType`
        should("test mimeType") {
            // uncomment below to test the property
            //modelInstance.mimeType shouldBe ("TODO")
        }

        // to test the property `audioTrackList`
        should("test audioTrackList") {
            // uncomment below to test the property
            //modelInstance.audioTrackList shouldBe ("TODO")
        }

        // to test the property `subtitleInformationList`
        should("test subtitleInformationList") {
            // uncomment below to test the property
            //modelInstance.subtitleInformationList shouldBe ("TODO")
        }

        // to test the property `analyticsData`
        should("test analyticsData") {
            // uncomment below to test the property
            //modelInstance.analyticsData shouldBe ("TODO")
        }

        // to test the property `analyticsMetadata`
        should("test analyticsMetadata") {
            // uncomment below to test the property
            //modelInstance.analyticsMetadata shouldBe ("TODO")
        }

        // to test the property `streamOffset` - Stream offset in milliseconds
        should("test streamOffset") {
            // uncomment below to test the property
            //modelInstance.streamOffset shouldBe ("TODO")
        }

    }
}
