/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ch.srg.sam.generated.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ch.srg.sam.generated.model.ShowDto
import ch.srg.sam.generated.model.BroadcastInformationDto
import ch.srg.sam.generated.model.BusinessUnitDto
import ch.srg.sam.generated.model.ImageFocalPointDto
import ch.srg.sam.generated.model.LanguageDto
import ch.srg.sam.generated.model.LinkDto
import ch.srg.sam.generated.model.QualityDto
import ch.srg.sam.generated.model.TopicDto
import ch.srg.sam.generated.model.TransmissionDto

class ShowDtoTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ShowDto
        //val modelInstance = ShowDto()

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `vendor`
        should("test vendor") {
            // uncomment below to test the property
            //modelInstance.vendor shouldBe ("TODO")
        }

        // to test the property `transmission`
        should("test transmission") {
            // uncomment below to test the property
            //modelInstance.transmission shouldBe ("TODO")
        }

        // to test the property `urn`
        should("test urn") {
            // uncomment below to test the property
            //modelInstance.urn shouldBe ("TODO")
        }

        // to test the property `title`
        should("test title") {
            // uncomment below to test the property
            //modelInstance.title shouldBe ("TODO")
        }

        // to test the property `imageUrl`
        should("test imageUrl") {
            // uncomment below to test the property
            //modelInstance.imageUrl shouldBe ("TODO")
        }

        // to test the property `lead`
        should("test lead") {
            // uncomment below to test the property
            //modelInstance.lead shouldBe ("TODO")
        }

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `imageTitle`
        should("test imageTitle") {
            // uncomment below to test the property
            //modelInstance.imageTitle shouldBe ("TODO")
        }

        // to test the property `imageCopyright`
        should("test imageCopyright") {
            // uncomment below to test the property
            //modelInstance.imageCopyright shouldBe ("TODO")
        }

        // to test the property `imageFocalPoint`
        should("test imageFocalPoint") {
            // uncomment below to test the property
            //modelInstance.imageFocalPoint shouldBe ("TODO")
        }

        // to test the property `bannerImageUrl`
        should("test bannerImageUrl") {
            // uncomment below to test the property
            //modelInstance.bannerImageUrl shouldBe ("TODO")
        }

        // to test the property `posterImageUrl`
        should("test posterImageUrl") {
            // uncomment below to test the property
            //modelInstance.posterImageUrl shouldBe ("TODO")
        }

        // to test the property `posterImageIsFallbackUrl`
        should("test posterImageIsFallbackUrl") {
            // uncomment below to test the property
            //modelInstance.posterImageIsFallbackUrl shouldBe ("TODO")
        }

        // to test the property `podcastImageUrl`
        should("test podcastImageUrl") {
            // uncomment below to test the property
            //modelInstance.podcastImageUrl shouldBe ("TODO")
        }

        // to test the property `podcastImageIsFallbackUrl`
        should("test podcastImageIsFallbackUrl") {
            // uncomment below to test the property
            //modelInstance.podcastImageIsFallbackUrl shouldBe ("TODO")
        }

        // to test the property `homepageUrl`
        should("test homepageUrl") {
            // uncomment below to test the property
            //modelInstance.homepageUrl shouldBe ("TODO")
        }

        // to test the property `podcastSubscriptionUrl`
        should("test podcastSubscriptionUrl") {
            // uncomment below to test the property
            //modelInstance.podcastSubscriptionUrl shouldBe ("TODO")
        }

        // to test the property `podcastFeedSdUrl`
        should("test podcastFeedSdUrl") {
            // uncomment below to test the property
            //modelInstance.podcastFeedSdUrl shouldBe ("TODO")
        }

        // to test the property `podcastFeedHdUrl`
        should("test podcastFeedHdUrl") {
            // uncomment below to test the property
            //modelInstance.podcastFeedHdUrl shouldBe ("TODO")
        }

        // to test the property `podcastDeezerUrl`
        should("test podcastDeezerUrl") {
            // uncomment below to test the property
            //modelInstance.podcastDeezerUrl shouldBe ("TODO")
        }

        // to test the property `podcastSpotifyUrl`
        should("test podcastSpotifyUrl") {
            // uncomment below to test the property
            //modelInstance.podcastSpotifyUrl shouldBe ("TODO")
        }

        // to test the property `timeTableUrl` - Link to program guide
        should("test timeTableUrl") {
            // uncomment below to test the property
            //modelInstance.timeTableUrl shouldBe ("TODO")
        }

        // to test the property `links`
        should("test links") {
            // uncomment below to test the property
            //modelInstance.links shouldBe ("TODO")
        }

        // to test the property `primaryChannelId`
        should("test primaryChannelId") {
            // uncomment below to test the property
            //modelInstance.primaryChannelId shouldBe ("TODO")
        }

        // to test the property `primaryChannelUrn`
        should("test primaryChannelUrn") {
            // uncomment below to test the property
            //modelInstance.primaryChannelUrn shouldBe ("TODO")
        }

        // to test the property `viewedMedias` - viewedMedias is no longer supported and is always null
        should("test viewedMedias") {
            // uncomment below to test the property
            //modelInstance.viewedMedias shouldBe ("TODO")
        }

        // to test the property `numberOfEpisodes`
        should("test numberOfEpisodes") {
            // uncomment below to test the property
            //modelInstance.numberOfEpisodes shouldBe ("TODO")
        }

        // to test the property `availableAudioLanguageList`
        should("test availableAudioLanguageList") {
            // uncomment below to test the property
            //modelInstance.availableAudioLanguageList shouldBe ("TODO")
        }

        // to test the property `availableSubtitleLanguageList`
        should("test availableSubtitleLanguageList") {
            // uncomment below to test the property
            //modelInstance.availableSubtitleLanguageList shouldBe ("TODO")
        }

        // to test the property `availableVideoQualityList`
        should("test availableVideoQualityList") {
            // uncomment below to test the property
            //modelInstance.availableVideoQualityList shouldBe ("TODO")
        }

        // to test the property `audioDescriptionAvailable`
        should("test audioDescriptionAvailable") {
            // uncomment below to test the property
            //modelInstance.audioDescriptionAvailable shouldBe ("TODO")
        }

        // to test the property `subtitlesAvailable`
        should("test subtitlesAvailable") {
            // uncomment below to test the property
            //modelInstance.subtitlesAvailable shouldBe ("TODO")
        }

        // to test the property `multiAudioLanguagesAvailable`
        should("test multiAudioLanguagesAvailable") {
            // uncomment below to test the property
            //modelInstance.multiAudioLanguagesAvailable shouldBe ("TODO")
        }

        // to test the property `topicList`
        should("test topicList") {
            // uncomment below to test the property
            //modelInstance.topicList shouldBe ("TODO")
        }

        // to test the property `broadcastInformation`
        should("test broadcastInformation") {
            // uncomment below to test the property
            //modelInstance.broadcastInformation shouldBe ("TODO")
        }

        // to test the property `allowIndexing`
        should("test allowIndexing") {
            // uncomment below to test the property
            //modelInstance.allowIndexing shouldBe ("TODO")
        }

    }
}
