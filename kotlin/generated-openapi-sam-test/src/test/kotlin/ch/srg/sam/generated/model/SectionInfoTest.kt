/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ch.srg.sam.generated.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ch.srg.sam.generated.model.SectionInfoDto
import ch.srg.sam.generated.model.BusinessUnitDto
import ch.srg.sam.generated.model.MediaTypeDto
import ch.srg.sam.generated.model.SectionRepresentationDto

class SectionInfoDtoTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SectionInfoDto
        //val modelInstance = SectionInfoDto()

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `isPublished` - Indicate if this is the draft (false) or the published version (true) of the section.
        should("test isPublished") {
            // uncomment below to test the property
            //modelInstance.isPublished shouldBe ("TODO")
        }

        // to test the property `vendor`
        should("test vendor") {
            // uncomment below to test the property
            //modelInstance.vendor shouldBe ("TODO")
        }

        // to test the property `sectionType`
        should("test sectionType") {
            // uncomment below to test the property
            //modelInstance.sectionType shouldBe ("TODO")
        }

        // to test the property `mediaType`
        should("test mediaType") {
            // uncomment below to test the property
            //modelInstance.mediaType shouldBe ("TODO")
        }

        // to test the property `hasPersonalizedContent`
        should("test hasPersonalizedContent") {
            // uncomment below to test the property
            //modelInstance.hasPersonalizedContent shouldBe ("TODO")
        }

        // to test the property `representation`
        should("test representation") {
            // uncomment below to test the property
            //modelInstance.representation shouldBe ("TODO")
        }

        // to test the property `start` - Starting point of the validity period (optional)
        should("test start") {
            // uncomment below to test the property
            //modelInstance.start shouldBe ("TODO")
        }

        // to test the property `end` - Endpoint of the validity period (optional)
        should("test end") {
            // uncomment below to test the property
            //modelInstance.end shouldBe ("TODO")
        }

        // to test the property `isGlobal` - Deprecated, always false.
        should("test isGlobal") {
            // uncomment below to test the property
            //modelInstance.isGlobal shouldBe ("TODO")
        }

        // to test the property `timeRangeStart` - Start of time range, during which this section is available. Time in SRG timezone (Europe/Zürich)
        should("test timeRangeStart") {
            // uncomment below to test the property
            //modelInstance.timeRangeStart shouldBe ("TODO")
        }

        // to test the property `timeRangeEnd` - End of time range, during which this section is available. Time in SRG timezone (Europe/Zürich)
        should("test timeRangeEnd") {
            // uncomment below to test the property
            //modelInstance.timeRangeEnd shouldBe ("TODO")
        }

    }
}
