/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ch.srg.sam.generated.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ch.srg.sam.generated.model.EpisodeDataWithUrnDto
import ch.srg.sam.generated.model.EpisodeBroadcastDto
import ch.srg.sam.generated.model.MediaDataDto

class EpisodeDataWithUrnDtoTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of EpisodeDataWithUrnDto
        //val modelInstance = EpisodeDataWithUrnDto()

        // to test the property `urn`
        should("test urn") {
            // uncomment below to test the property
            //modelInstance.urn shouldBe ("TODO")
        }

        // to test the property `externalId`
        should("test externalId") {
            // uncomment below to test the property
            //modelInstance.externalId shouldBe ("TODO")
        }

        // to test the property `title`
        should("test title") {
            // uncomment below to test the property
            //modelInstance.title shouldBe ("TODO")
        }

        // to test the property `broadcasts`
        should("test broadcasts") {
            // uncomment below to test the property
            //modelInstance.broadcasts shouldBe ("TODO")
        }

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `episodeNumber`
        should("test episodeNumber") {
            // uncomment below to test the property
            //modelInstance.episodeNumber shouldBe ("TODO")
        }

        // to test the property `imageCopyright`
        should("test imageCopyright") {
            // uncomment below to test the property
            //modelInstance.imageCopyright shouldBe ("TODO")
        }

        // to test the property `imageTitle`
        should("test imageTitle") {
            // uncomment below to test the property
            //modelInstance.imageTitle shouldBe ("TODO")
        }

        // to test the property `imageUrl`
        should("test imageUrl") {
            // uncomment below to test the property
            //modelInstance.imageUrl shouldBe ("TODO")
        }

        // to test the property `lead`
        should("test lead") {
            // uncomment below to test the property
            //modelInstance.lead shouldBe ("TODO")
        }

        // to test the property `medias`
        should("test medias") {
            // uncomment below to test the property
            //modelInstance.medias shouldBe ("TODO")
        }

        // to test the property `publishedDate`
        should("test publishedDate") {
            // uncomment below to test the property
            //modelInstance.publishedDate shouldBe ("TODO")
        }

        // to test the property `seasonNumber`
        should("test seasonNumber") {
            // uncomment below to test the property
            //modelInstance.seasonNumber shouldBe ("TODO")
        }

        // to test the property `showUrn`
        should("test showUrn") {
            // uncomment below to test the property
            //modelInstance.showUrn shouldBe ("TODO")
        }

        // to test the property `topicUrns`
        should("test topicUrns") {
            // uncomment below to test the property
            //modelInstance.topicUrns shouldBe ("TODO")
        }

        // to test the property `transmissionId`
        should("test transmissionId") {
            // uncomment below to test the property
            //modelInstance.transmissionId shouldBe ("TODO")
        }

        // to test the property `isWebFirst`
        should("test isWebFirst") {
            // uncomment below to test the property
            //modelInstance.isWebFirst shouldBe ("TODO")
        }

        // to test the property `isWebOnly`
        should("test isWebOnly") {
            // uncomment below to test the property
            //modelInstance.isWebOnly shouldBe ("TODO")
        }

    }
}
